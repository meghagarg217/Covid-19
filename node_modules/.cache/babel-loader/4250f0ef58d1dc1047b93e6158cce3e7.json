{"ast":null,"code":"export default function validate({\n  name,\n  email,\n  phoneno,\n  city,\n  bloodgrp\n}) {\n  let errors = {};\n\n  if (!name.trim()) {\n    errors.name = \"Name required\";\n  } else if (/\\d/.test(name)) {\n    errors.city = \"Name is invalid\";\n  }\n\n  if (!email) {\n    errors.email = \"Email required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n    errors.email = 'Email address is invalid';\n  }\n\n  if (!phoneno) {\n    errors.phoneno = \"Phone number required\";\n  } else if (!/^\\d{10}$/.test(phoneno)) {\n    errors.phoneno = 'Phone number is invalid';\n  }\n\n  if (!city.trim()) {\n    errors.city = \"City required\";\n  } else if (/\\d/.test(city)) {\n    errors.city = \"City is invalid\";\n  }\n\n  if (!bloodgrp.trim()) {\n    errors.bloodgrp = \"Blood group required\";\n  } else if (!/(A|B|AB|O)[+-]/.test(bloodgrp)) {\n    errors.bloodgrp = \"Invalid Blood group\";\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["D:/Covid-19-main/src/Utilities/validate.js"],"names":["validate","name","email","phoneno","city","bloodgrp","errors","trim","test"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA,IAAvB;AAA6BC,EAAAA;AAA7B,CAAlB,EAA0D;AACrE,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAG,CAACL,IAAI,CAACM,IAAL,EAAJ,EAAiB;AACbD,IAAAA,MAAM,CAACL,IAAP,GAAc,eAAd;AACH,GAFD,MAEO,IAAI,KAAKO,IAAL,CAAUP,IAAV,CAAJ,EAAqB;AACxBK,IAAAA,MAAM,CAACF,IAAP,GAAc,iBAAd;AACH;;AAED,MAAG,CAACF,KAAJ,EAAW;AACPI,IAAAA,MAAM,CAACJ,KAAP,GAAe,gBAAf;AACH,GAFD,MAEO,IAAG,CAAC,2CAA2CM,IAA3C,CAAgDN,KAAhD,CAAJ,EAA4D;AAC/DI,IAAAA,MAAM,CAACJ,KAAP,GAAe,0BAAf;AACH;;AAED,MAAG,CAACC,OAAJ,EAAa;AACTG,IAAAA,MAAM,CAACH,OAAP,GAAiB,uBAAjB;AACH,GAFD,MAEO,IAAI,CAAC,WAAWK,IAAX,CAAgBL,OAAhB,CAAL,EAA+B;AAClCG,IAAAA,MAAM,CAACH,OAAP,GAAiB,yBAAjB;AACH;;AAED,MAAG,CAACC,IAAI,CAACG,IAAL,EAAJ,EAAiB;AACbD,IAAAA,MAAM,CAACF,IAAP,GAAc,eAAd;AACH,GAFD,MAEO,IAAI,KAAKI,IAAL,CAAUJ,IAAV,CAAJ,EAAqB;AACxBE,IAAAA,MAAM,CAACF,IAAP,GAAc,iBAAd;AACH;;AAED,MAAG,CAACC,QAAQ,CAACE,IAAT,EAAJ,EAAqB;AACjBD,IAAAA,MAAM,CAACD,QAAP,GAAkB,sBAAlB;AACH,GAFD,MAEO,IAAI,CAAE,iBAAiBG,IAAjB,CAAsBH,QAAtB,CAAN,EAAuC;AAC1CC,IAAAA,MAAM,CAACD,QAAP,GAAkB,qBAAlB;AACH;;AAED,SAAOC,MAAP;AACH","sourcesContent":["export default function validate({name, email, phoneno, city, bloodgrp}) {\n    let errors = {}\n\n    if(!name.trim()) {\n        errors.name = \"Name required\"\n    } else if (/\\d/.test(name)) {\n        errors.city = \"Name is invalid\"\n    }\n\n    if(!email) {\n        errors.email = \"Email required\"\n    } else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n        errors.email = 'Email address is invalid'\n    }\n\n    if(!phoneno) {\n        errors.phoneno = \"Phone number required\"\n    } else if (!/^\\d{10}$/.test(phoneno)) {\n        errors.phoneno = 'Phone number is invalid'\n    }\n\n    if(!city.trim()) {\n        errors.city = \"City required\"\n    } else if (/\\d/.test(city)) {\n        errors.city = \"City is invalid\"\n    }\n\n    if(!bloodgrp.trim()) {\n        errors.bloodgrp = \"Blood group required\"\n    } else if (! /(A|B|AB|O)[+-]/.test(bloodgrp)) {\n        errors.bloodgrp = \"Invalid Blood group\"\n    }\n\n    return errors;\n}"]},"metadata":{},"sourceType":"module"}
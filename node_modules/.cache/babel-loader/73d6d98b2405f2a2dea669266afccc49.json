{"ast":null,"code":"var _jsxFileName = \"D:\\\\Covid-19-main\\\\src\\\\Line graph\\\\LineGraph.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport numeral from 'numeral';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: 'index',\n    intersect: false,\n    callbacks: {\n      label: function (tooltipitem, data) {\n        return numeral(tooltipitem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\n\nfunction LineGraph({\n  casesType = 'cases'\n}) {\n  _s();\n\n  const [data, setData] = React.useState({});\n\n  const buildChartdata = (data, casesType = 'cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(response => response.json()).then(data => {\n        const ChartData = buildChartdata(data);\n        setData(ChartData);\n      });\n    };\n\n    fetchData();\n  }, [casesType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          data: data,\n          borderColor: \"#CC1034\",\n          backgroundColor: \"rgba(204,16,52,0.5)\"\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["D:/Covid-19-main/src/Line graph/LineGraph.jsx"],"names":["React","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipitem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","casesType","setData","useState","buildChartdata","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetchData","fetch","then","response","json","ChartData","length","datasets","borderColor","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\n\nimport { Line } from 'react-chartjs-2';\n\nimport numeral from 'numeral';\n\nconst options = {\n    legend: {\n        display: false,\n    },\n    elements: {\n        point: {\n            radius: 0\n        },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n            label: function (tooltipitem, data) {\n                return numeral(tooltipitem.value).format(\"+0,0\");\n            },\n        },\n    },\n    scales: {\n        xAxes: [\n            {\n                type: \"time\",\n                time: {\n                    format: \"MM/DD/YY\",\n                    tooltipFormat: \"ll\",\n                },\n            },\n        ],\n        yAxes: [\n            {\n                gridLines: {\n                    display: false,\n                },\n                ticks: {\n                    callback: function(value, index, values) {\n                        return numeral(value).format(\"0a\");\n                    },\n                },\n            },\n        ],\n    },\n};\n\nfunction LineGraph({ casesType = 'cases' }) {\n\n    const [data, setData] = React.useState({});\n\n    const buildChartdata = (data, casesType='cases') => {\n        const chartData = [];\n        let lastDataPoint;\n        for (let date in data.cases) {\n            if (lastDataPoint) {\n                const newDataPoint = {\n                    x: date,\n                    y: data[casesType][date] - lastDataPoint\n                }\n                chartData.push(newDataPoint);\n            }\n            lastDataPoint = data[casesType][date];\n        }\n        return chartData;\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n            .then(response => response.json())\n            .then(data => {\n                const ChartData = buildChartdata(data);\n                setData(ChartData);\n            });\n        };\n\n        fetchData();\n    }, [casesType]);\n\n    return (\n        <div>\n            {\n                data?.length > 0 && (\n                    <Line\n                        options={options}\n                        data={{\n                            datasets: [{\n                                data: data,\n                                borderColor: \"#CC1034\",\n                                backgroundColor: \"rgba(204,16,52,0.5)\"\n                            }]\n                        }}\n                    />\n                )\n            }\n        </div>\n    )\n}\n\nexport default LineGraph"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Covid-19-main\\\\src\\\\Registration\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport validate from '../Utilities/validate';\nimport db from '../Firebase';\nimport './Register.css';\nimport { useHistory } from 'react-router';\nimport CircularIndeterminate from '../Spinner/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phoneno, setPhoneno] = useState('');\n  const [city, setCity] = useState('');\n  const [bloodgrp, setbloodgrp] = useState('');\n  const [errors, setError] = useState({});\n  const [plasma, setPlasma] = useState('Yes');\n  const [submitting, setIsSubmitting] = useState(false); //    const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"heloo\");\n    setError(validate({\n      name,\n      email,\n      city,\n      phoneno,\n      bloodgrp\n    })); //    setIsSubmitting(true);\n    //    setSubmitted(true);\n\n    console.log(name, email, city, phoneno, bloodgrp);\n\n    try {\n      db.collection('Users').add({\n        Name: name,\n        Email: email,\n        Contact_number: phoneno,\n        City: city,\n        Blood_group: bloodgrp,\n        Plasma_donation: plasma\n      }).then(event => {\n        console.log(event);\n        setIsSubmitting(false);\n        alert('Thank you for registering');\n        history.push('/');\n      }).catch(error1 => {\n        console.log(error1);\n      });\n    } catch (error) {\n      alert(error.message);\n      setIsSubmitting(false);\n      console.log(error);\n    }\n  };\n\n  if (submitting) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: /*#__PURE__*/_jsxDEV(CircularIndeterminate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Become a Donor today!! Start by filling out the information below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"username\",\n            className: \"form__label form-control\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            className: \"form__input\",\n            name: \"username\",\n            placeholder: \"Enter your Name\",\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form__label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            className: \"form__input\",\n            name: \"email\",\n            placeholder: \"Enter your Email\",\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phoneno\",\n            className: \"form__label\",\n            children: \"Phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"phoneno\",\n            type: \"text\",\n            className: \"form__input\",\n            name: \"phoneno\",\n            placeholder: \"Enter your Phone number\",\n            required: true,\n            onChange: e => setPhoneno(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), errors.phoneno && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.phoneno\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            className: \"form__label\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"city\",\n            type: \"text\",\n            className: \"form__input\",\n            name: \"city\",\n            placeholder: \"Enter your City\",\n            required: true,\n            onChange: e => setCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), errors.city && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bloodgrp\",\n            className: \"form__label\",\n            children: \"Blood group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"bloodgrp\",\n            type: \"text\",\n            className: \"form__input\",\n            name: \"bloodgroup\",\n            placeholder: \"Enter your Blood group\",\n            required: true,\n            onChange: e => setbloodgrp(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), errors.bloodgrp && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.bloodgrp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__radio\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"plasma\",\n            className: \"form__label\",\n            children: \"Willing to Donate plasma\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"plasma\",\n            type: \"radio\",\n            value: \"Yes\",\n            className: \"form__input__radio\",\n            name: \"plasma\",\n            required: true,\n            onChange: e => setPlasma(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"plasma\",\n            type: \"radio\",\n            value: \"No\",\n            className: \"form__input__radio\",\n            name: \"plasma\",\n            required: true,\n            onChange: e => setPlasma(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form__text\",\n          children: \"Kindly refrain from registering with invalid details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form__button\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Register, \"WkgrqPPu+oU5oBC3na/xbmLA5IU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/Covid-19-main/src/Registration/Register.jsx"],"names":["React","useState","validate","db","useHistory","CircularIndeterminate","Register","history","name","setName","email","setEmail","phoneno","setPhoneno","city","setCity","bloodgrp","setbloodgrp","errors","setError","plasma","setPlasma","submitting","setIsSubmitting","handleSubmit","e","preventDefault","console","log","collection","add","Name","Email","Contact_number","City","Blood_group","Plasma_donation","then","event","alert","push","catch","error1","error","message","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,EAAP,MAAe,aAAf;AAEA,OAAO,gBAAP;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,qBAAP,MAAkC,oBAAlC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AAEA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,MAAD,EAASC,QAAT,IAAqBlB,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAM,CAACqB,UAAD,EAAaC,eAAb,IAAgCtB,QAAQ,CAAC,KAAD,CAA9C,CAZmB,CAcvB;;AAEI,QAAMuB,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAT,IAAAA,QAAQ,CAACjB,QAAQ,CAAC;AAACM,MAAAA,IAAD;AAAME,MAAAA,KAAN;AAAYI,MAAAA,IAAZ;AAAiBF,MAAAA,OAAjB;AAAyBI,MAAAA;AAAzB,KAAD,CAAT,CAAR,CAHsB,CAI1B;AACA;;AAEAW,IAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ,EAAiBE,KAAjB,EAAuBI,IAAvB,EAA4BF,OAA5B,EAAoCI,QAApC;;AAIQ,QAAI;AACAb,MAAAA,EAAE,CAAC0B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AACvBC,QAAAA,IAAI,EAAEvB,IADiB;AAEvBwB,QAAAA,KAAK,EAAEtB,KAFgB;AAGvBuB,QAAAA,cAAc,EAAErB,OAHO;AAIvBsB,QAAAA,IAAI,EAAEpB,IAJiB;AAKvBqB,QAAAA,WAAW,EAAEnB,QALU;AAMvBoB,QAAAA,eAAe,EAAEhB;AANM,OAA3B,EAOGiB,IAPH,CAOQC,KAAK,IAAI;AACbX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACAf,QAAAA,eAAe,CAAC,KAAD,CAAf;AACAgB,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACAhC,QAAAA,OAAO,CAACiC,IAAR,CAAa,GAAb;AACH,OAZD,EAYGC,KAZH,CAYSC,MAAM,IAAI;AAACf,QAAAA,OAAO,CAACC,GAAR,CAAYc,MAAZ;AAAqB,OAZzC;AAaH,KAdD,CAcE,OAAMC,KAAN,EAAa;AACXJ,MAAAA,KAAK,CAACI,KAAK,CAACC,OAAP,CAAL;AACArB,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACH;AAER,GA/BD;;AAiCA,MAAGrB,UAAH,EAAe;AACX,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAMO;AACH,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACA;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAEE,YAAjC;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,UAAf;AAA0B,YAAA,SAAS,EAAC,0BAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,EAAE,EAAC,UADP;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,SAAS,EAAC,aAHd;AAII,YAAA,IAAI,EAAC,UAJT;AAKI,YAAA,WAAW,EAAC,iBALhB;AAMI,YAAA,QAAQ,EAAEC,CAAC,IAAIhB,OAAO,CAACgB,CAAC,CAACoB,MAAF,CAASC,KAAV,CAN1B;AAOI,YAAA,QAAQ,EAAE;AAPd;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAWK5B,MAAM,CAACV,IAAP,iBAAe;AAAA,sBAAIU,MAAM,CAACV;AAAX;AAAA;AAAA;AAAA;AAAA,kBAXpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAeI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAuB,YAAA,SAAS,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,EAAE,EAAC,OADP;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,SAAS,EAAC,aAHd;AAII,YAAA,IAAI,EAAC,OAJT;AAKI,YAAA,WAAW,EAAC,kBALhB;AAMI,YAAA,QAAQ,EAAEiB,CAAC,IAAId,QAAQ,CAACc,CAAC,CAACoB,MAAF,CAASC,KAAV,CAN3B;AAOI,YAAA,QAAQ,EAAE;AAPd;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAWK5B,MAAM,CAACR,KAAP,iBAAgB;AAAA,sBAAIQ,MAAM,CAACR;AAAX;AAAA;AAAA;AAAA;AAAA,kBAXrB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,eA4BI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,SAAf;AAAyB,YAAA,SAAS,EAAC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,EAAE,EAAC,SADP;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,SAAS,EAAC,aAHd;AAII,YAAA,IAAI,EAAC,SAJT;AAKI,YAAA,WAAW,EAAC,yBALhB;AAMI,YAAA,QAAQ,EAAE,IANd;AAOI,YAAA,QAAQ,EAAEe,CAAC,IAAIZ,UAAU,CAACY,CAAC,CAACoB,MAAF,CAASC,KAAV;AAP7B;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAWK5B,MAAM,CAACN,OAAP,iBAAkB;AAAA,sBAAIM,MAAM,CAACN;AAAX;AAAA;AAAA;AAAA;AAAA,kBAXvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BJ,eAyCI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,MAAf;AAAsB,YAAA,SAAS,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,EAAE,EAAC,MADP;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,SAAS,EAAC,aAHd;AAII,YAAA,IAAI,EAAC,MAJT;AAKI,YAAA,WAAW,EAAC,iBALhB;AAMI,YAAA,QAAQ,EAAE,IANd;AAOI,YAAA,QAAQ,EAAEa,CAAC,IAAIV,OAAO,CAACU,CAAC,CAACoB,MAAF,CAASC,KAAV;AAP1B;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAWK5B,MAAM,CAACJ,IAAP,iBAAe;AAAA,sBAAII,MAAM,CAACJ;AAAX;AAAA;AAAA;AAAA;AAAA,kBAXpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzCJ,eAsDI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,UAAf;AAA0B,YAAA,SAAS,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,EAAE,EAAC,UADP;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,SAAS,EAAC,aAHd;AAII,YAAA,IAAI,EAAC,YAJT;AAKI,YAAA,WAAW,EAAC,wBALhB;AAMI,YAAA,QAAQ,EAAE,IANd;AAOI,YAAA,QAAQ,EAAEW,CAAC,IAAIR,WAAW,CAACQ,CAAC,CAACoB,MAAF,CAASC,KAAV;AAP9B;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAWK5B,MAAM,CAACF,QAAP,iBAAmB;AAAA,sBAAIE,MAAM,CAACF;AAAX;AAAA;AAAA;AAAA;AAAA,kBAXxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtDJ,eAmEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,QAAf;AAAwB,YAAA,SAAS,EAAC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,EAAE,EAAC,QADP;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,KAAK,EAAC,KAHV;AAII,YAAA,SAAS,EAAC,oBAJd;AAKI,YAAA,IAAI,EAAC,QALT;AAMI,YAAA,QAAQ,EAAE,IANd;AAOI,YAAA,QAAQ,EAAES,CAAC,IAAIJ,SAAS,CAACI,CAAC,CAACoB,MAAF,CAASC,KAAV;AAP5B;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAYI;AACI,YAAA,EAAE,EAAC,QADP;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,KAAK,EAAC,IAHV;AAII,YAAA,SAAS,EAAC,oBAJd;AAKI,YAAA,IAAI,EAAC,QALT;AAMI,YAAA,QAAQ,EAAE,IANd;AAOI,YAAA,QAAQ,EAAErB,CAAC,IAAIJ,SAAS,CAACI,CAAC,CAACoB,MAAF,CAASC,KAAV;AAP5B;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnEJ,eA0FI;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1FJ,eA2FI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,IAAI,EAAC,QAAtC;AAA+C,UAAA,OAAO,EAAEtB,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3FJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAiGA;AAAA;AAAA;AAAA;AAAA,cAjGA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqGP;AACA,CA9JD;;GAAMlB,Q;UAEcF,U;;;KAFdE,Q;AAgKN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\n\nimport validate from '../Utilities/validate';\nimport db from '../Firebase';\n\nimport './Register.css';\nimport { useHistory } from 'react-router';\nimport CircularIndeterminate from '../Spinner/Spinner';\n\nconst Register = () => {\n\n    const history = useHistory();\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phoneno, setPhoneno] = useState('');\n    const [city, setCity] = useState('');\n    const [bloodgrp, setbloodgrp] = useState('');\n    const [errors, setError] = useState({});\n    const [plasma, setPlasma] = useState('Yes');\n\n    const [submitting, setIsSubmitting] = useState(false);\n\n//    const [submitted, setSubmitted] = useState(false);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        console.log(\"heloo\");\n        setError(validate({name,email,city,phoneno,bloodgrp}));\n    //    setIsSubmitting(true);\n    //    setSubmitted(true);\n    \n    console.log(name,email,city,phoneno,bloodgrp);\n    \n        \n              \n            try {\n                db.collection('Users').add({\n                    Name: name,\n                    Email: email,\n                    Contact_number: phoneno,\n                    City: city,\n                    Blood_group: bloodgrp,\n                    Plasma_donation: plasma\n                }).then(event => {\n                    console.log(event);\n                    setIsSubmitting(false);\n                    alert('Thank you for registering');\n                    history.push('/');\n                }).catch(error1 => {console.log(error1);})\n            } catch(error) {\n                alert(error.message);\n                setIsSubmitting(false);\n                console.log(error);\n            }\n        \n    }\n\n    if(submitting) {\n        return (\n            <div className='spinner'>\n                <CircularIndeterminate/>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"register\">\n            <form className='form' onSubmit={handleSubmit}>\n                <h2>Become a Donor today!! Start by filling out the information below.</h2>\n                <div className='form__inputs'>\n                    <label htmlfor=\"username\" className='form__label form-control'>Name</label>\n                    <input\n                        id='username'\n                        type='text' \n                        className='form__input'\n                        name='username'\n                        placeholder='Enter your Name'\n                        onChange={e => setName(e.target.value)}\n                        required={true}\n                    />\n                    {errors.name && <p>{errors.name}</p>}\n                </div>\n                <div className='form__inputs'>\n                    <label htmlFor=\"email\" className='form__label'>Email</label>\n                    <input \n                        id='email'\n                        type='email' \n                        className='form__input'\n                        name='email'\n                        placeholder='Enter your Email'\n                        onChange={e => setEmail(e.target.value)}\n                        required={true}\n                    />\n                    {errors.email && <p>{errors.email}</p>}\n                </div>\n                <div className='form__inputs'>\n                    <label htmlFor=\"phoneno\" className='form__label'>Phone number</label>\n                    <input \n                        id='phoneno'\n                        type='text' \n                        className='form__input'\n                        name='phoneno'\n                        placeholder='Enter your Phone number'\n                        required={true}\n                        onChange={e => setPhoneno(e.target.value)}\n                    />\n                    {errors.phoneno && <p>{errors.phoneno}</p>}\n                </div>\n                <div className='form__inputs'>\n                    <label htmlFor=\"city\" className='form__label'>City</label>\n                    <input \n                        id='city'\n                        type='text' \n                        className='form__input'\n                        name='city'\n                        placeholder='Enter your City'\n                        required={true}\n                        onChange={e => setCity(e.target.value)}\n                    />\n                    {errors.city && <p>{errors.city}</p>}\n                </div>\n                <div className='form__inputs'>\n                    <label htmlFor=\"bloodgrp\" className='form__label'>Blood group</label>\n                    <input \n                        id='bloodgrp'\n                        type='text' \n                        className='form__input'\n                        name='bloodgroup'\n                        placeholder='Enter your Blood group'\n                        required={true}\n                        onChange={e => setbloodgrp(e.target.value)}\n                    />\n                    {errors.bloodgrp && <p>{errors.bloodgrp}</p>}\n                </div>\n                <div className='form__radio'>\n                    <label htmlFor=\"plasma\" className='form__label' >Willing to Donate plasma</label>\n                    <input \n                        id='plasma'\n                        type='radio'\n                        value='Yes' \n                        className='form__input__radio'\n                        name='plasma'\n                        required={true}\n                        onChange={e => setPlasma(e.target.value)}\n                    />\n                    <label>Yes</label>\n                    <input \n                        id='plasma'\n                        type='radio'\n                        value='No' \n                        className='form__input__radio'\n                        name='plasma'\n                        required={true}\n                        onChange={e => setPlasma(e.target.value)}\n                    />\n                    <label>No</label>\n                </div>                    \n                <span className=\"form__text\">Kindly refrain from registering with invalid details</span>\n                <button className=\"form__button\" type='submit' onClick={handleSubmit}>\n                    Register\n                </button>\n                \n            </form>\n            <p></p>\n        </div>\n    )\n}\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}